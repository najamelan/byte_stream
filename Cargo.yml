package:

  # When releasing to crates.io:
  #
  # - last check for all TODO, FIXME, expect, unwrap.
  # - recheck log statements (informative, none left that were just for development, ...)
  # - `cargo +nightly doc` and re-read and final polish of documentation.
  #
  # - Update CHANGELOG.md.
  # - Update version numbers in Cargo.yml, Cargo.toml, install section of readme.
  #
  # - `touch **.rs && cargo clippy --tests --examples --benches --all-features`
  # - `cargo update`
  # - `cargo udeps --all-targets --all-features`
  # - `cargo audit`
  # - `cargo crev crate verify --show-all --recursive` and review.
  # - 'cargo test --all-targets --all-features'
  #
  # - push dev and verify CI result
  # - `cargo test` on dependent crates
  #
  # - cargo publish
  # - `git checkout master && git merge dev --no-ff`
  # - `git tag x.x.x` with version number.
  # - `git push && git push --tags`
  #
  version       : 0.4.0
  name          : futures_ringbuf
  authors       : [ Naja Melan <najamelan@autistici.org> ]
  description   : Mock Type implementing AsyncRead/AsyncWrite for testing and examples.
  documentation : https://docs.rs/futures_ringbuf
  repository    : https://github.com/najamelan/futures_ringbuf
  readme        : README.md
  keywords      : [ futures, mocking, stream, testing, async ]
  categories    : [ asynchronous, network-programming, "development-tools::testing" ]
  license       : Unlicense
  edition       : '2018'
  resolver      : '2'
  exclude       : [ ci, .travis.yml, TODO.md ]

  metadata:
    docs:
      rs:
        all-features: true
        targets     : []


features:

  default: []

  # This enables the Sketchy and Dictator types.
  sketchy: [ rand, rand_chacha, getrandom ]


badges:

  maintenance: { status     : actively-developed        }
  travis-ci  : { repository : najamelan/futures_ringbuf }


dependencies:

  # Public dependencies, bump major if changing any version number here.
  #
  ringbuf: ^0.3
  futures: ^0.3
  log    : ^0.4

  # private deps
  #
  rand       : { version: ^0.8, optional: true }
  rand_chacha: { version: ^0.3, optional: true }

dev-dependencies:

  pretty_assertions : ^1
  futures-test      : ^0.3
  asynchronous-codec: ^0.6
  assert_matches    : ^1
  ergo-pin          : ^0.1
  tokio             : { version: ^1, features: [ io-util ] }
  tokio-util        : { version: ^0.7, features: [ codec, compat ] }
  async-std         : { version: ^1  , features: [ attributes ] }

build-dependencies:

  rustc_version: ^0.4


profile:

  release:

    codegen-units: 1


target:

  'cfg(target_arch = "wasm32")':

    dependencies:

      getrandom: { version: ^0.2, features: [ js ], optional: true }

    dev-dependencies:

      wasm-bindgen         : ^0.2
      wasm-bindgen-test    : ^0.3
      wasm-bindgen-futures : { version: ^0.4 }
